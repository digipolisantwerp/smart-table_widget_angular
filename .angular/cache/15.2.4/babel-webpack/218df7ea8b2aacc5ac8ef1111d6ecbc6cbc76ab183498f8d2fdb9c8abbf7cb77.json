{"ast":null,"code":"import { Directive, ElementRef, HostBinding, Input, Injectable, EventEmitter, Inject, ChangeDetectorRef, Output, ContentChild, Host, PLATFORM_ID, HostListener, NgModule, Component } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Subject, merge } from 'rxjs';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { IconModule } from '@acpaas-ui/ngx-icon';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout/directives/flyout-zone.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@acpaas-ui/ngx-icon';\nfunction FlyoutButtonComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵprojection(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n}\nconst _c0 = function (a0, a1, a2, a3) {\n  return [a0, a1, a2, a3];\n};\nconst _c1 = [\"*\"];\nlet FlyoutZoneDirective = /*#__PURE__*/(() => {\n  class FlyoutZoneDirective {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n      this.elementRef = elementRef;\n      this.class = true;\n      this.isExpanded = false;\n      this.element = this.elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    get flyoutZoneIsExpanded() {\n      return this.isExpanded;\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    contains(element) {\n      if (this.auiFlyoutZone === false) {\n        return false;\n      }\n      return this.element.contains(element);\n    }\n  }\n  FlyoutZoneDirective.ɵfac = function FlyoutZoneDirective_Factory(t) {\n    return new (t || FlyoutZoneDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n  FlyoutZoneDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FlyoutZoneDirective,\n    selectors: [[\"\", \"auiFlyoutZone\", \"\"]],\n    hostVars: 3,\n    hostBindings: function FlyoutZoneDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.flyoutZoneIsExpanded);\n        ɵngcc0.ɵɵclassProp(\"m-flyout__content\", ctx.class);\n      }\n    },\n    inputs: {\n      auiFlyoutZone: \"auiFlyoutZone\"\n    },\n    exportAs: [\"auiFlyoutZone\"]\n  });\n  /** @nocollapse */\n  return FlyoutZoneDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  FlyoutZoneDirective.prototype.class;\n  /** @type {?} */\n  FlyoutZoneDirective.prototype.auiFlyoutZone;\n  /** @type {?} */\n  FlyoutZoneDirective.prototype.isExpanded;\n  /** @type {?} */\n  FlyoutZoneDirective.prototype.element;\n  /**\n   * @type {?}\n   * @private\n   */\n  FlyoutZoneDirective.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout/types/flyout.types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst FlyoutSize = {\n  Auto: \"auto\",\n  Small: \"small\",\n  Medium: \"medium\",\n  Large: \"large\",\n  Full: \"full\"\n};\n/** @enum {number} */\nconst FlyoutState = {\n  OPEN: 0,\n  CLOSED: 1\n};\nFlyoutState[FlyoutState.OPEN] = 'OPEN';\nFlyoutState[FlyoutState.CLOSED] = 'CLOSED';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout/services/flyout.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet FlyoutService = /*#__PURE__*/(() => {\n  class FlyoutService {\n    constructor() {\n      this.state$ = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n      this.state$.next(FlyoutState.CLOSED);\n    }\n  }\n  FlyoutService.ɵfac = function FlyoutService_Factory(t) {\n    return new (t || FlyoutService)();\n  };\n  FlyoutService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: FlyoutService,\n    factory: FlyoutService.ɵfac\n  });\n  return FlyoutService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  FlyoutService.prototype.state$;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout/utils/event.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/* tslint:disable */\n/** @type {?} */\nconst isEvent =\n/**\n* @param {?} e\n* @param {?} code\n* @param {?=} keyCode\n* @return {?}\n*/\n(e, code, keyCode) => {\n  /** @type {?} */\n  const isCode = !!e.code && e.code.toLowerCase() === code;\n  /** @type {?} */\n  const isKeyCode = keyCode !== undefined ? e.keyCode === keyCode || e.which === keyCode : true;\n  return isCode && isKeyCode;\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout/directives/flyout.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// @dynamic\nlet FlyoutDirective = /*#__PURE__*/(() => {\n  class FlyoutDirective {\n    /**\n     * @param {?} document\n     * @param {?} flyoutService\n     * @param {?} cdr\n     * @param {?} ref\n     */\n    constructor(document, flyoutService, cdr, ref) {\n      this.document = document;\n      this.flyoutService = flyoutService;\n      this.cdr = cdr;\n      this.ref = ref;\n      this.flyoutClass = true;\n      this.flyoutTabIndex = '-1';\n      this.flyoutAriaPop = true;\n      this.size = FlyoutSize.Auto;\n      this.toggleClick = true;\n      this.activateOnFocus = false;\n      this.opened = new EventEmitter();\n      this.closed = new EventEmitter();\n      this.isOpened = false;\n      this.state$ = new Subject();\n      this.destroyed$ = new Subject();\n      this.handleKeyUp = this.handleKeyUp.bind(this);\n      this.state$.next(FlyoutState.CLOSED);\n      merge(this.state$, this.flyoutService.state$).pipe(takeUntil(this.destroyed$), distinctUntilChanged()).subscribe(\n      /**\n      * @param {?} state\n      * @return {?}\n      */\n      state => {\n        this.isOpened = state === FlyoutState.OPEN;\n        if (this.flyoutZone) {\n          this.flyoutZone.isExpanded = this.isOpened;\n        }\n        if (this.isOpened) {\n          this.opened.emit();\n        } else {\n          this.closed.emit();\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n    get flyoutAlignRight() {\n      return this.align === 'right';\n    }\n    /**\n     * @return {?}\n     */\n    get flyoutSmall() {\n      return this.size === 'small';\n    }\n    /**\n     * @return {?}\n     */\n    get flyoutMedium() {\n      return this.size === 'medium';\n    }\n    /**\n     * @return {?}\n     */\n    get flyoutLarge() {\n      return this.size === 'large';\n    }\n    /**\n     * @return {?}\n     */\n    get flyoutFull() {\n      return this.size === 'full';\n    }\n    /**\n     * @return {?}\n     */\n    get flyoutOpen() {\n      return this.isOpened;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n      this.destroyed$.next(true);\n    }\n    /**\n     * @return {?}\n     */\n    open() {\n      this.state$.next(FlyoutState.OPEN);\n      this.document.addEventListener('keyup', this.handleKeyUp);\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n      this.state$.next(FlyoutState.CLOSED);\n      this.cdr.markForCheck();\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    isInClosableZone(element) {\n      if (!element) {\n        return false;\n      }\n      /** @type {?} */\n      const isInZone = this.flyoutZone && this.flyoutZone.contains(element);\n      /** @type {?} */\n      const isFlyout = this.ref.nativeElement === element || this.ref.nativeElement.contains(element);\n      return isInZone || isFlyout;\n    }\n    /**\n     * @private\n     * @param {?} e\n     * @return {?}\n     */\n    handleKeyUp(e) {\n      if (isEvent(e, 'escape', 27)) {\n        this.document.removeEventListener('keyup', this.handleKeyUp);\n        this.close();\n        this.cdr.markForCheck();\n      }\n    }\n  }\n  FlyoutDirective.ɵfac = function FlyoutDirective_Factory(t) {\n    return new (t || FlyoutDirective)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(FlyoutService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n  FlyoutDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FlyoutDirective,\n    selectors: [[\"\", \"auiFlyout\", \"\"]],\n    contentQueries: function FlyoutDirective_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, FlyoutZoneDirective, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.flyoutZone = _t.first);\n      }\n    },\n    hostVars: 16,\n    hostBindings: function FlyoutDirective_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.flyoutTabIndex)(\"aria-haspopup\", ctx.flyoutAriaPop);\n        ɵngcc0.ɵɵclassProp(\"m-flyout\", ctx.flyoutClass)(\"m-flyout--right\", ctx.flyoutAlignRight)(\"m-flyout--sm\", ctx.flyoutSmall)(\"m-flyout--md\", ctx.flyoutMedium)(\"m-flyout--lg\", ctx.flyoutLarge)(\"m-flyout--full\", ctx.flyoutFull)(\"is-open\", ctx.flyoutOpen);\n      }\n    },\n    inputs: {\n      size: \"size\",\n      toggleClick: \"toggleClick\",\n      activateOnFocus: \"activateOnFocus\",\n      align: \"align\"\n    },\n    outputs: {\n      opened: \"opened\",\n      closed: \"closed\"\n    },\n    exportAs: [\"auiFlyout\"]\n  });\n  /** @nocollapse */\n  return FlyoutDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  FlyoutDirective.prototype.flyoutClass;\n  /** @type {?} */\n  FlyoutDirective.prototype.flyoutTabIndex;\n  /** @type {?} */\n  FlyoutDirective.prototype.flyoutAriaPop;\n  /** @type {?} */\n  FlyoutDirective.prototype.size;\n  /** @type {?} */\n  FlyoutDirective.prototype.align;\n  /** @type {?} */\n  FlyoutDirective.prototype.toggleClick;\n  /** @type {?} */\n  FlyoutDirective.prototype.activateOnFocus;\n  /** @type {?} */\n  FlyoutDirective.prototype.opened;\n  /** @type {?} */\n  FlyoutDirective.prototype.closed;\n  /** @type {?} */\n  FlyoutDirective.prototype.flyoutZone;\n  /** @type {?} */\n  FlyoutDirective.prototype.isOpened;\n  /** @type {?} */\n  FlyoutDirective.prototype.state$;\n  /**\n   * @type {?}\n   * @private\n   */\n  FlyoutDirective.prototype.destroyed$;\n  /**\n   * @type {?}\n   * @private\n   */\n  FlyoutDirective.prototype.document;\n  /**\n   * @type {?}\n   * @private\n   */\n  FlyoutDirective.prototype.flyoutService;\n  /**\n   * @type {?}\n   * @private\n   */\n  FlyoutDirective.prototype.cdr;\n  /**\n   * @type {?}\n   * @private\n   */\n  FlyoutDirective.prototype.ref;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout/directives/flyout-action.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// @dynamic\nlet FlyoutActionDirective = /*#__PURE__*/(() => {\n  class FlyoutActionDirective {\n    /**\n     * @param {?} flyout\n     * @param {?} platformId\n     * @param {?} document\n     * @param {?} elementRef\n     */\n    constructor(flyout, platformId, document, elementRef) {\n      this.flyout = flyout;\n      this.document = document;\n      this.elementRef = elementRef;\n      this.class = true;\n      this.openOnFocus = true;\n      this.destroyed$ = new Subject();\n      this.isPlatformBrowser = isPlatformBrowser(platformId);\n      this.closeIfInClosableZone = this.closeIfInClosableZone.bind(this);\n      this.onBlur = this.onBlur.bind(this);\n    }\n    /**\n     * @return {?}\n     */\n    get tabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n      this.flyout.state$.pipe(takeUntil(this.destroyed$)).subscribe(\n      /**\n      * @param {?} state\n      * @return {?}\n      */\n      state => {\n        if (state === FlyoutState.OPEN) {\n          setTimeout(\n          /**\n          * @return {?}\n          */\n          () => {\n            this.addEventListeners();\n          }, 100); // flyout open delay\n        } else {\n          this.removeEventListeners();\n        }\n      });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n      this.destroyed$.next(true);\n      this.destroyed$.complete();\n      if (this.isPlatformBrowser) {\n        this.document.removeEventListener('click', this.closeIfInClosableZone, true);\n      }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onMousedown(event) {\n      event.stopImmediatePropagation();\n      if (this.flyout.isOpened && this.flyout.toggleClick) {\n        this.close();\n      } else {\n        this.open();\n      }\n    }\n    /**\n     * @return {?}\n     */\n    onFocus() {\n      if (!this.openOnFocus || !this.isPlatformBrowser || this.flyout.isOpened) {\n        return;\n      }\n      this.open();\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onKeyDown(e) {\n      if (isEvent(e, 'space', 32) || isEvent(e, 'enter', 13)) {\n        this.open();\n      }\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onBlur(event) {\n      if (!this.isPlatformBrowser || !this.flyout.isOpened) {\n        return;\n      }\n      /** @type {?} */\n      const isInClosableZone = !event.relatedTarget || this.flyout.isInClosableZone( /** @type {?} */event.relatedTarget);\n      /** @type {?} */\n      const isTarget = event.relatedTarget === this.elementRef.nativeElement;\n      if (!isInClosableZone && !isTarget) {\n        this.close();\n      }\n    }\n    /**\n     * @return {?}\n     */\n    open() {\n      if (!this.isPlatformBrowser || this.flyout.isOpened) {\n        return;\n      }\n      this.flyout.open();\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n      if (!this.isPlatformBrowser || !this.flyout.isOpened) {\n        return;\n      }\n      this.flyout.close();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    addEventListeners() {\n      this.document.addEventListener('click', this.closeIfInClosableZone, true);\n      this.document.addEventListener('focusout', this.onBlur, true);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    removeEventListeners() {\n      this.document.removeEventListener('click', this.closeIfInClosableZone, true);\n      this.document.removeEventListener('focusout', this.onBlur, true);\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    checkIfInClosableZone(event) {\n      /** @type {?} */\n      const isInClosableZone = this.flyout.isInClosableZone( /** @type {?} */event.target);\n      /** @type {?} */\n      const isTarget = event.target === this.elementRef.nativeElement;\n      /** @type {?} */\n      const containsTarget = this.elementRef.nativeElement.contains(event.target);\n      return !isInClosableZone && !isTarget && !containsTarget;\n    }\n    /**\n     * @private\n     * @param {?} event\n     * @return {?}\n     */\n    closeIfInClosableZone(event) {\n      if (!this.isPlatformBrowser) {\n        return;\n      }\n      /** @type {?} */\n      const inClosableZone = this.checkIfInClosableZone(event);\n      if (inClosableZone) {\n        this.close();\n      }\n    }\n  }\n  FlyoutActionDirective.ɵfac = function FlyoutActionDirective_Factory(t) {\n    return new (t || FlyoutActionDirective)(ɵngcc0.ɵɵdirectiveInject(FlyoutDirective, 1), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n  };\n  FlyoutActionDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FlyoutActionDirective,\n    selectors: [[\"\", \"auiFlyoutAction\", \"\"]],\n    hostVars: 3,\n    hostBindings: function FlyoutActionDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function FlyoutActionDirective_mousedown_HostBindingHandler($event) {\n          return ctx.onMousedown($event);\n        })(\"focus\", function FlyoutActionDirective_focus_HostBindingHandler() {\n          return ctx.onFocus();\n        })(\"keydown\", function FlyoutActionDirective_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"ngx-flyout-action\", ctx.class);\n      }\n    },\n    inputs: {\n      openOnFocus: \"openOnFocus\",\n      disabled: \"disabled\"\n    },\n    exportAs: [\"auiFlyoutAction\"]\n  });\n  /** @nocollapse */\n  return FlyoutActionDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  FlyoutActionDirective.prototype.class;\n  /** @type {?} */\n  FlyoutActionDirective.prototype.openOnFocus;\n  /** @type {?} */\n  FlyoutActionDirective.prototype.disabled;\n  /**\n   * @type {?}\n   * @private\n   */\n  FlyoutActionDirective.prototype.isPlatformBrowser;\n  /**\n   * @type {?}\n   * @private\n   */\n  FlyoutActionDirective.prototype.destroyed$;\n  /** @type {?} */\n  FlyoutActionDirective.prototype.flyout;\n  /**\n   * @type {?}\n   * @private\n   */\n  FlyoutActionDirective.prototype.document;\n  /**\n   * @type {?}\n   * @private\n   */\n  FlyoutActionDirective.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout/directives/flyout-close.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet FlyoutCloseDirective = /*#__PURE__*/(() => {\n  class FlyoutCloseDirective {\n    /**\n     * @param {?} flyout\n     */\n    constructor(flyout) {\n      this.flyout = flyout;\n    }\n    /**\n     * @return {?}\n     */\n    onClick() {\n      this.flyout.close();\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onKeyDown(e) {\n      if (isEvent(e, 'space', 32) || isEvent(e, 'enter', 13)) {\n        this.flyout.close();\n      }\n    }\n  }\n  FlyoutCloseDirective.ɵfac = function FlyoutCloseDirective_Factory(t) {\n    return new (t || FlyoutCloseDirective)(ɵngcc0.ɵɵdirectiveInject(FlyoutDirective, 1));\n  };\n  FlyoutCloseDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: FlyoutCloseDirective,\n    selectors: [[\"\", \"auiFlyoutClose\", \"\"]],\n    hostBindings: function FlyoutCloseDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function FlyoutCloseDirective_click_HostBindingHandler() {\n          return ctx.onClick();\n        })(\"keydown\", function FlyoutCloseDirective_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n    },\n    exportAs: [\"auiFlyoutClose\"]\n  });\n  /** @nocollapse */\n  return FlyoutCloseDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  FlyoutCloseDirective.prototype.flyout;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout/flyout.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet FlyoutModule = /*#__PURE__*/(() => {\n  class FlyoutModule {}\n  FlyoutModule.ɵfac = function FlyoutModule_Factory(t) {\n    return new (t || FlyoutModule)();\n  };\n  FlyoutModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FlyoutModule\n  });\n  FlyoutModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [FlyoutService],\n    imports: [CommonModule]\n  });\n  return FlyoutModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FlyoutModule, {\n    declarations: function () {\n      return [FlyoutActionDirective, FlyoutCloseDirective, FlyoutZoneDirective, FlyoutDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [FlyoutActionDirective, FlyoutCloseDirective, FlyoutZoneDirective, FlyoutDirective];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout-button/types/flyout-button.types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {string} */\nconst FlyoutButtonSize = {\n  Auto: \"auto\",\n  Tiny: \"tiny\",\n  Small: \"small\",\n  Large: \"large\"\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout-button/components/flyout-button/flyout-button.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet FlyoutButtonComponent = /*#__PURE__*/(() => {\n  class FlyoutButtonComponent {\n    constructor() {\n      this.buttonClassNames = {\n        tiny: 'a-button--tiny',\n        small: 'a-button--small',\n        auto: '',\n        large: 'a-button--large'\n      };\n      this.buttonSize = FlyoutButtonSize.Auto;\n      this.outline = false;\n      this.flyoutOpen = false;\n    }\n    /**\n     * @param {?} open\n     * @return {?}\n     */\n    handleFlyoutChanged(open) {\n      this.flyoutOpen = open;\n    }\n  }\n  FlyoutButtonComponent.ɵfac = function FlyoutButtonComponent_Factory(t) {\n    return new (t || FlyoutButtonComponent)();\n  };\n  FlyoutButtonComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: FlyoutButtonComponent,\n    selectors: [[\"aui-flyout-button\"]],\n    inputs: {\n      buttonSize: \"buttonSize\",\n      outline: \"outline\",\n      title: \"title\",\n      label: \"label\",\n      icon: \"icon\",\n      align: \"align\",\n      flyoutSize: \"flyoutSize\"\n    },\n    ngContentSelectors: _c1,\n    decls: 6,\n    vars: 12,\n    consts: [[\"auiFlyout\", \"\", 3, \"align\", \"size\", \"closed\", \"opened\"], [\"auiFlyoutAction\", \"\", \"type\", \"button\", 3, \"ngClass\", \"title\"], [3, \"name\"], [\"auiFlyoutZone\", \"\"], [4, \"ngIf\"]],\n    template: function FlyoutButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"closed\", function FlyoutButtonComponent_Template_div_closed_0_listener() {\n          return ctx.handleFlyoutChanged(false);\n        })(\"opened\", function FlyoutButtonComponent_Template_div_opened_0_listener() {\n          return ctx.handleFlyoutChanged(true);\n        });\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵelement(2, \"aui-icon\", 2);\n        ɵngcc0.ɵɵtext(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"div\", 3);\n        ɵngcc0.ɵɵtemplate(5, FlyoutButtonComponent_ng_container_5_Template, 2, 0, \"ng-container\", 4);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"align\", ctx.align)(\"size\", ctx.flyoutSize);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵpropertyInterpolate(\"title\", ctx.title);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction4(7, _c0, ctx.buttonClassNames[ctx.buttonSize], ctx.icon && ctx.label ? \"has-icon-left\" : \"\", ctx.icon && !ctx.label ? \"has-icon\" : \"\", ctx.outline ? \"a-button-outline\" : \"a-button\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"name\", ctx.icon);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ctx.label, \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.flyoutOpen);\n      }\n    },\n    dependencies: [ɵngcc1.NgClass, ɵngcc1.NgIf, FlyoutActionDirective, FlyoutZoneDirective, FlyoutDirective, ɵngcc2.IconComponent],\n    encapsulation: 2\n  });\n  return FlyoutButtonComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  FlyoutButtonComponent.prototype.buttonClassNames;\n  /** @type {?} */\n  FlyoutButtonComponent.prototype.title;\n  /** @type {?} */\n  FlyoutButtonComponent.prototype.label;\n  /** @type {?} */\n  FlyoutButtonComponent.prototype.icon;\n  /** @type {?} */\n  FlyoutButtonComponent.prototype.align;\n  /** @type {?} */\n  FlyoutButtonComponent.prototype.buttonSize;\n  /** @type {?} */\n  FlyoutButtonComponent.prototype.flyoutSize;\n  /** @type {?} */\n  FlyoutButtonComponent.prototype.outline;\n  /** @type {?} */\n  FlyoutButtonComponent.prototype.flyoutOpen;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/flyout-button/flyout-button.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet FlyoutButtonModule = /*#__PURE__*/(() => {\n  class FlyoutButtonModule {}\n  FlyoutButtonModule.ɵfac = function FlyoutButtonModule_Factory(t) {\n    return new (t || FlyoutButtonModule)();\n  };\n  FlyoutButtonModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: FlyoutButtonModule\n  });\n  FlyoutButtonModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule, FlyoutModule, IconModule]\n  });\n  return FlyoutButtonModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FlyoutButtonModule, {\n    declarations: function () {\n      return [FlyoutButtonComponent];\n    },\n    imports: function () {\n      return [CommonModule, FlyoutModule, IconModule];\n    },\n    exports: function () {\n      return [FlyoutButtonComponent];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: acpaas-ui-ngx-flyout.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FlyoutActionDirective, FlyoutButtonComponent, FlyoutButtonModule, FlyoutButtonSize, FlyoutCloseDirective, FlyoutDirective, FlyoutModule, FlyoutService, FlyoutSize, FlyoutState, FlyoutZoneDirective };\n\n//# sourceMappingURL=acpaas-ui-ngx-flyout.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
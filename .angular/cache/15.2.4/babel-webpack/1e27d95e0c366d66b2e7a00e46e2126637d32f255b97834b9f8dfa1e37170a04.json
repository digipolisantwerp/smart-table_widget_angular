{"ast":null,"code":"import { EventEmitter, Component, Input, Output, ContentChild, TemplateRef, Directive, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/selectable-list/selectable-list.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nfunction SelectableListComponent_li_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 5);\n  }\n  if (rf & 2) {\n    const item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ctx_r3.formatLabel(item_r1), ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\nfunction SelectableListComponent_li_1_2_ng_template_0_Template(rf, ctx) {}\nconst _c0 = function (a0) {\n  return {\n    item: a0\n  };\n};\nfunction SelectableListComponent_li_1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, SelectableListComponent_li_1_2_ng_template_0_Template, 0, 0, \"ng-template\", 6);\n  }\n  if (rf & 2) {\n    const item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c0, item_r1))(\"ngTemplateOutlet\", ctx_r4.template);\n  }\n}\nfunction SelectableListComponent_li_1_3_ng_template_0_Template(rf, ctx) {}\nconst _c1 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\nfunction SelectableListComponent_li_1_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, SelectableListComponent_li_1_3_ng_template_0_Template, 0, 0, \"ng-template\", 6);\n  }\n  if (rf & 2) {\n    const item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c1, item_r1))(\"ngTemplateOutlet\", ctx_r5.itemTemplate);\n  }\n}\nfunction SelectableListComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function SelectableListComponent_li_1_Template_li_click_0_listener() {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r11.selectItem(item_r1));\n    });\n    ɵngcc0.ɵɵtemplate(1, SelectableListComponent_li_1_span_1_Template, 1, 1, \"span\", 3);\n    ɵngcc0.ɵɵtemplate(2, SelectableListComponent_li_1_2_Template, 1, 4, null, 4);\n    ɵngcc0.ɵɵtemplate(3, SelectableListComponent_li_1_3_Template, 1, 4, null, 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", i_r2 === ctx_r0.index ? \"m-selectable-list__item--active\" : \"\");\n    ɵngcc0.ɵɵattribute(\"aria-selected\", i_r2 === ctx_r0.index);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r0.template && !ctx_r0.itemTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.template);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.itemTemplate);\n  }\n}\nlet SelectableListComponent = /*#__PURE__*/(() => {\n  class SelectableListComponent {\n    constructor() {\n      this.index = 0;\n      this.selected = new EventEmitter();\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    selectItem(item) {\n      this.selected.emit(item);\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    formatLabel(input) {\n      /** @type {?} */\n      const inputString = this.label ? input[this.label] : input;\n      if (!this.search) {\n        return inputString;\n      }\n      /** @type {?} */\n      const regEx = new RegExp(this.search, 'ig');\n      return inputString.replace(regEx, '<strong>' + this.search + '</strong>');\n    }\n  }\n  SelectableListComponent.ɵfac = function SelectableListComponent_Factory(t) {\n    return new (t || SelectableListComponent)();\n  };\n  SelectableListComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: SelectableListComponent,\n    selectors: [[\"aui-selectable-list\"]],\n    contentQueries: function SelectableListComponent_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.template = _t.first);\n      }\n    },\n    inputs: {\n      index: \"index\",\n      items: \"items\",\n      search: \"search\",\n      label: \"label\",\n      itemTemplate: \"itemTemplate\"\n    },\n    outputs: {\n      selected: \"selected\"\n    },\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"aui-selectable-list\", \"m-selectable-list\", \"m-selectable-list--no-border\"], [\"class\", \"m-selectable-list__item\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"m-selectable-list__item\", 3, \"ngClass\", \"click\"], [3, \"innerHTML\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"innerHTML\"], [3, \"ngTemplateOutletContext\", \"ngTemplateOutlet\"]],\n    template: function SelectableListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, SelectableListComponent_li_1_Template, 4, 5, \"li\", 1);\n        ɵngcc0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n      }\n    },\n    dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return SelectableListComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  SelectableListComponent.prototype.items;\n  /** @type {?} */\n  SelectableListComponent.prototype.index;\n  /** @type {?} */\n  SelectableListComponent.prototype.search;\n  /** @type {?} */\n  SelectableListComponent.prototype.label;\n  /** @type {?} */\n  SelectableListComponent.prototype.itemTemplate;\n  /** @type {?} */\n  SelectableListComponent.prototype.selected;\n  /** @type {?} */\n  SelectableListComponent.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/directives/selectable-actions.directive.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet SelectableActionsDirective = /*#__PURE__*/(() => {\n  class SelectableActionsDirective {\n    constructor() {\n      this.keyArrowUp = new EventEmitter();\n      this.keyArrowDown = new EventEmitter();\n      this.keyEnter = new EventEmitter();\n      this.keyEscape = new EventEmitter();\n    }\n    /**\n     * @param {?} e\n     * @return {?}\n     */\n    onKeyDown(e) {\n      switch (e.key) {\n        case 'ArrowUp':\n          // UP\n          e.preventDefault(); // Do not change cursor pos\n          this.keyArrowUp.emit(e);\n          break;\n        case 'ArrowDown':\n          // DOWN\n          e.preventDefault(); // Do not change cursor pos\n          this.keyArrowDown.emit(e);\n          break;\n        case 'Enter':\n          // ENTER\n          this.keyEnter.emit(e);\n          break;\n        case 'Escape':\n          // ESCAPE\n          this.keyEscape.emit(e);\n          break;\n      }\n    }\n  }\n  SelectableActionsDirective.ɵfac = function SelectableActionsDirective_Factory(t) {\n    return new (t || SelectableActionsDirective)();\n  };\n  SelectableActionsDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: SelectableActionsDirective,\n    selectors: [[\"\", \"auiSelectableActions\", \"\"]],\n    hostBindings: function SelectableActionsDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function SelectableActionsDirective_keydown_HostBindingHandler($event) {\n          return ctx.onKeyDown($event);\n        });\n      }\n    },\n    outputs: {\n      keyArrowUp: \"keyArrowUp\",\n      keyArrowDown: \"keyArrowDown\",\n      keyEnter: \"keyEnter\",\n      keyEscape: \"keyEscape\"\n    },\n    exportAs: [\"auiSelectableActions\"]\n  });\n  return SelectableActionsDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  SelectableActionsDirective.prototype.keyArrowUp;\n  /** @type {?} */\n  SelectableActionsDirective.prototype.keyArrowDown;\n  /** @type {?} */\n  SelectableActionsDirective.prototype.keyEnter;\n  /** @type {?} */\n  SelectableActionsDirective.prototype.keyEscape;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/selectable-list.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet SelectableListModule = /*#__PURE__*/(() => {\n  class SelectableListModule {}\n  SelectableListModule.ɵfac = function SelectableListModule_Factory(t) {\n    return new (t || SelectableListModule)();\n  };\n  SelectableListModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: SelectableListModule\n  });\n  SelectableListModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [CommonModule]\n  });\n  return SelectableListModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(SelectableListModule, {\n    declarations: function () {\n      return [SelectableListComponent, SelectableActionsDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [SelectableListComponent, SelectableActionsDirective];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: acpaas-ui-ngx-selectable-list.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { SelectableActionsDirective, SelectableListComponent, SelectableListModule };\n\n//# sourceMappingURL=acpaas-ui-ngx-selectable-list.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
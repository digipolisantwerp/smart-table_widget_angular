{"ast":null,"code":"import { Injectable, InjectionToken, EventEmitter, Component, ChangeDetectionStrategy, Inject, HostBinding, Input, Output, NgModule } from '@angular/core';\nimport { DateGenerator, DateHelper } from '@acpaas-ui/js-date-utils';\nimport { get, chunk } from 'lodash-es';\nimport { CommonModule } from '@angular/common';\nimport { IconModule } from '@acpaas-ui/ngx-icon';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/types/calendar.types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@acpaas-ui/ngx-icon';\nfunction CalendarComponent_aui_calendar_month_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"aui-calendar-month\", 8);\n    ɵngcc0.ɵɵlistener(\"selectDate\", function CalendarComponent_aui_calendar_month_8_Template_aui_calendar_month_selectDate_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      const ctx_r3 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r3.pickDate($event));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r0.activeDate)(\"range\", ctx_r0.range)(\"interval\", ctx_r0.interval)(\"selectedDate\", ctx_r0.selectedDate)(\"weekdayLabels\", ctx_r0.weekdayLabels);\n  }\n}\nfunction CalendarComponent_aui_calendar_year_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"aui-calendar-year\", 9);\n    ɵngcc0.ɵɵlistener(\"selectDate\", function CalendarComponent_aui_calendar_year_9_Template_aui_calendar_year_selectDate_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      const ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r5.pickDate($event));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r1.activeDate)(\"monthLabels\", ctx_r1.monthLabels)(\"selectedDate\", ctx_r1.selectedDate);\n  }\n}\nfunction CalendarComponent_aui_calendar_decennia_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"aui-calendar-decennia\", 10);\n    ɵngcc0.ɵɵlistener(\"selectDate\", function CalendarComponent_aui_calendar_decennia_10_Template_aui_calendar_decennia_selectDate_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      const ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ɵngcc0.ɵɵresetView(ctx_r7.pickDate($event));\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"activeDate\", ctx_r2.activeDate)(\"selectedDate\", ctx_r2.selectedDate);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-current\": a0,\n    \"is-selected\": a1\n  };\n};\nfunction CalendarDecenniaComponent_tr_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\")(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function CalendarDecenniaComponent_tr_2_td_1_Template_button_click_1_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5);\n      const year_r3 = restoredCtx.$implicit;\n      const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r4.pickDate($event, year_r3));\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const year_r3 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(2, _c0, year_r3 === ctx_r2.current, year_r3 === ctx_r2.selectedYear));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", year_r3, \" \");\n  }\n}\nfunction CalendarDecenniaComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵtemplate(1, CalendarDecenniaComponent_tr_2_td_1_Template, 3, 5, \"td\", 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", group_r1);\n  }\n}\nfunction CalendarMonthComponent_th_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"th\", 4)(1, \"span\", 5);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"slice\");\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const day_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"title\", day_r2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind3(3, 2, day_r2, 0, 2));\n  }\n}\nconst _c1 = function (a0, a1, a2, a3) {\n  return {\n    \"is-faded\": a0,\n    \"is-selected\": a1,\n    \"is-current\": a2,\n    \"is-unavailable\": a3\n  };\n};\nfunction CalendarMonthComponent_tr_5_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\")(1, \"button\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function CalendarMonthComponent_tr_5_td_1_Template_button_click_1_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7);\n      const day_r5 = restoredCtx.$implicit;\n      const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r6.pickDate($event, day_r5));\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const day_r5 = ctx.$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"disabled\", !day_r5.available)(\"ngClass\", ɵngcc0.ɵɵpureFunction4(3, _c1, !day_r5.date || day_r5.padding, !day_r5.padding && day_r5.date === ctx_r4.selectedDay, !day_r5.padding && day_r5.date === ctx_r4.current, !day_r5.available));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r5.date);\n  }\n}\nfunction CalendarMonthComponent_tr_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵtemplate(1, CalendarMonthComponent_tr_5_td_1_Template, 3, 8, \"td\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const week_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", week_r3);\n  }\n}\nfunction CalendarYearComponent_tr_2_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"td\")(1, \"button\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function CalendarYearComponent_tr_2_td_1_Template_button_click_1_listener($event) {\n      const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5);\n      const month_r3 = restoredCtx.$implicit;\n      const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ɵngcc0.ɵɵresetView(ctx_r4.pickDate($event, month_r3));\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"titlecase\");\n    ɵngcc0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const month_r3 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(4, _c0, month_r3 === ctx_r2.current, month_r3 === ctx_r2.monthLabels[ctx_r2.selectedMonth]));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(3, 2, month_r3), \" \");\n  }\n}\nfunction CalendarYearComponent_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"tr\");\n    ɵngcc0.ɵɵtemplate(1, CalendarYearComponent_tr_2_td_1_Template, 4, 7, \"td\", 1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const group_r1 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", group_r1);\n  }\n}\nconst CALENDAR_VIEW_MONTH = 'CALENDAR_VIEW_MONTH';\n/** @type {?} */\nconst CALENDAR_VIEW_YEAR = 'CALENDAR_VIEW_YEAR';\n/** @type {?} */\nconst CALENDAR_VIEW_DECENNIA = 'CALENDAR_VIEW_DECENNIA';\n/**\n * @record\n */\nfunction DatepickerResult() {}\nif (false) {\n  /** @type {?} */\n  DatepickerResult.prototype.date;\n  /** @type {?} */\n  DatepickerResult.prototype.complete;\n}\n/**\n * @record\n */\nfunction DateRangeMap() {}\nif (false) {\n  /** @type {?} */\n  DateRangeMap.prototype.before;\n  /** @type {?} */\n  DateRangeMap.prototype.current;\n  /** @type {?} */\n  DateRangeMap.prototype.after;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/services/calendar.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction MonthMap() {}\nlet CalendarService = /*#__PURE__*/(() => {\n  class CalendarService {\n    constructor() {\n      this.months = {};\n    }\n    /**\n     * @param {?} month\n     * @param {?=} year\n     * @return {?}\n     */\n    getMonth(month, year) {\n      if (year) {\n        if (this.currentYear !== year) {\n          this.months = {};\n        }\n        this.currentYear = year;\n      }\n      if (this.months.hasOwnProperty(month)) {\n        return [...this.months[month]];\n      }\n      /** @type {?} */\n      const date = new Date();\n      date.setMonth(month, 1);\n      if (year) {\n        date.setFullYear(year);\n      }\n      /** @type {?} */\n      const generatedMonth = DateGenerator.generateMonth(date, {\n        startOfWeek: 1,\n        padding: true,\n        generatePadding: true\n      });\n      this.months[month] = generatedMonth;\n      return [...generatedMonth];\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getMonthForDate(date) {\n      return this.getMonth(date.getMonth(), date.getFullYear());\n    }\n    /**\n     * @param {?} date\n     * @param {?} range\n     * @return {?}\n     */\n    getRangeForDate(date, range) {\n      return DateGenerator.generateRange(date, range, {\n        startOfWeek: 1\n      });\n    }\n    /**\n     * @param {?} date\n     * @param {?} range\n     * @return {?}\n     */\n    getRangesForDate(date, range) {\n      /** @type {?} */\n      const rangeOptions = {\n        startOfWeek: 1\n      };\n      /** @type {?} */\n      const before = DateHelper.updateMonth(date, date.getMonth() - 1);\n      /** @type {?} */\n      const after = DateHelper.updateMonth(date, date.getMonth() + 1);\n      return {\n        before: DateGenerator.generateRange(before, range, rangeOptions),\n        current: DateGenerator.generateRange(date, range, rangeOptions),\n        after: DateGenerator.generateRange(after, range, rangeOptions)\n      };\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} range\n     * @return {?}\n     */\n    getClosestDateForRange(date = new Date(), range) {\n      /** @type {?} */\n      const dateRange = this.getRangeForDate(date, range);\n      if (DateHelper.dateOutOfRange(date, dateRange)) {\n        return date;\n      }\n      return DateHelper.closestDateForRange(date, dateRange);\n    }\n  }\n  CalendarService.ɵfac = function CalendarService_Factory(t) {\n    return new (t || CalendarService)();\n  };\n  CalendarService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: CalendarService,\n    factory: CalendarService.ɵfac\n  });\n  return CalendarService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  CalendarService.prototype.months;\n  /**\n   * @type {?}\n   * @private\n   */\n  CalendarService.prototype.currentYear;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/calendar.conf.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst CALENDAR_DEFAULT_WEEKDAY_LABELS = ['Maandag', 'Dinsdag', 'Woensdag', 'Donderdag', 'Vrijdag', 'Zaterdag', 'Zondag'];\n/** @type {?} */\nconst CALENDAR_DEFAULT_MONTH_LABELS = ['Januari', 'Februari', 'Maart', 'April', 'Mei', 'Juni', 'Juli', 'Augustus', 'September', 'Oktober', 'November', 'December'];\n/** @type {?} */\nconst CALENDAR_WEEKDAY_LABELS = new InjectionToken('weekdayLabels');\n/** @type {?} */\nconst CALENDAR_MONTH_LABELS = new InjectionToken('monthLabels');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/calendar/calendar.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet CalendarComponent = /*#__PURE__*/(() => {\n  class CalendarComponent {\n    /**\n     * @param {?=} moduleMonthLabels\n     * @param {?=} moduleWeekdayLabels\n     * @param {?=} calendarService\n     */\n    constructor(moduleMonthLabels = CALENDAR_DEFAULT_MONTH_LABELS, moduleWeekdayLabels = CALENDAR_DEFAULT_WEEKDAY_LABELS, calendarService) {\n      this.moduleMonthLabels = moduleMonthLabels;\n      this.moduleWeekdayLabels = moduleWeekdayLabels;\n      this.calendarService = calendarService;\n      this.role = 'application';\n      this.ariahidden = 'false';\n      this.ariaPreviousLabels = ['Ga naar vorige maand', 'Ga naar vorig jaar', 'Ga naar vorige 12 jaren'];\n      this.ariaNextLabels = ['Ga naar volgende maand', 'Ga naar volgend jaar', 'Ga naar volgende 12 jaren'];\n      this.selectDate = new EventEmitter();\n      this.CALENDAR_VIEW_MONTH = CALENDAR_VIEW_MONTH;\n      this.CALENDAR_VIEW_YEAR = CALENDAR_VIEW_YEAR;\n      this.CALENDAR_VIEW_DECENNIA = CALENDAR_VIEW_DECENNIA;\n      this.activeView = CALENDAR_VIEW_MONTH;\n      this.headerLabel = '';\n      this.ariaPreviousLabel = this.ariaPreviousLabels[0];\n      this.ariaNextLabel = this.ariaNextLabels[0];\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n      this.initControl();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n      /** @type {?} */\n      const selectedDate = changes.selectedDate && changes.selectedDate.currentValue ? changes.selectedDate : null;\n      if (typeof this.monthLabels !== 'undefined' && selectedDate && !DateHelper.datesAreEqual(selectedDate.currentValue, selectedDate.previousValue)) {\n        this.activeDate = this.selectedDate;\n        this.updateHeaderLabel();\n      } else {\n        /** @type {?} */\n        let activeDateToSet = new Date();\n        if (this.interval && this.interval.isInRange(activeDateToSet)) {\n          activeDateToSet = this.interval.min;\n        }\n        this.activeDate = DateHelper.parseDate(activeDateToSet);\n        this.initControl();\n      }\n    }\n    /**\n     * @param {?=} factor\n     * @return {?}\n     */\n    updateActiveDate(factor = 0) {\n      /** @type {?} */\n      const activeDate = this.activeDate ? new Date(this.activeDate) : new Date();\n      switch (this.activeView) {\n        case CALENDAR_VIEW_MONTH:\n          activeDate.setMonth(activeDate.getMonth() + factor);\n          break;\n        case CALENDAR_VIEW_YEAR:\n          activeDate.setFullYear(activeDate.getFullYear() + factor);\n          break;\n        case CALENDAR_VIEW_DECENNIA:\n          activeDate.setFullYear(activeDate.getFullYear() + 12 * factor);\n          break;\n      }\n      this.activeDate = activeDate;\n      this.updateHeaderLabel();\n    }\n    /**\n     * @param {?=} factor\n     * @return {?}\n     */\n    switchView(factor = 1) {\n      /** @type {?} */\n      const views = [CALENDAR_VIEW_MONTH, CALENDAR_VIEW_YEAR, CALENDAR_VIEW_DECENNIA];\n      /** @type {?} */\n      const currView = views.indexOf(this.activeView);\n      /** @type {?} */\n      let nextView = currView + factor >= views.length ? 0 : currView + factor;\n      nextView = nextView < 0 ? views.length - 1 : nextView;\n      this.activeView = views[nextView];\n      // reset activeDate when returning to month view without model update\n      if (this.selectedDate && nextView === 0 && factor === 1) {\n        this.activeDate = this.selectedDate;\n      }\n      this.updateHeaderLabel();\n    }\n    /**\n     * @return {?}\n     */\n    updateHeaderLabel() {\n      switch (this.activeView) {\n        case CALENDAR_VIEW_MONTH:\n          this.headerLabel = this.monthLabels[this.activeDate.getMonth()] + ' ' + this.activeDate.getFullYear();\n          this.ariaPreviousLabel = this.ariaPreviousLabels[0];\n          this.ariaNextLabel = this.ariaNextLabels[0];\n          break;\n        case CALENDAR_VIEW_YEAR:\n          this.headerLabel = String(this.activeDate.getFullYear());\n          this.ariaPreviousLabel = this.ariaPreviousLabels[1];\n          this.ariaNextLabel = this.ariaNextLabels[1];\n          break;\n        case CALENDAR_VIEW_DECENNIA:\n          /** @type {?} */\n          const startYear = this.activeDate.getFullYear();\n          this.headerLabel = `${startYear} - ${startYear + 11}`;\n          this.ariaPreviousLabel = this.ariaPreviousLabels[2];\n          this.ariaNextLabel = this.ariaNextLabels[2];\n          break;\n      }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    pickDate(date) {\n      /** @type {?} */\n      const complete = this.activeView === CALENDAR_VIEW_MONTH;\n      this.selectDate.emit({\n        date,\n        complete\n      });\n      if (!complete) {\n        this.activeDate = date;\n        this.switchView(-1);\n      }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    initControl() {\n      this.weekdayLabels = this.weekdayLabels || this.moduleWeekdayLabels;\n      this.monthLabels = this.monthLabels || this.moduleMonthLabels;\n      this.activeDate = this.calendarService.getClosestDateForRange(this.activeDate, this.range);\n      if (this.selectedDate) {\n        this.activeDate = this.selectedDate;\n        this.updateActiveDate();\n      }\n      this.updateHeaderLabel();\n    }\n  }\n  CalendarComponent.ɵfac = function CalendarComponent_Factory(t) {\n    return new (t || CalendarComponent)(ɵngcc0.ɵɵdirectiveInject(CALENDAR_MONTH_LABELS), ɵngcc0.ɵɵdirectiveInject(CALENDAR_WEEKDAY_LABELS), ɵngcc0.ɵɵdirectiveInject(CalendarService));\n  };\n  CalendarComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CalendarComponent,\n    selectors: [[\"aui-calendar\"]],\n    hostVars: 2,\n    hostBindings: function CalendarComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"aria-hidden\", ctx.ariahidden);\n      }\n    },\n    inputs: {\n      ariaPreviousLabels: \"ariaPreviousLabels\",\n      ariaNextLabels: \"ariaNextLabels\",\n      weekdayLabels: \"weekdayLabels\",\n      monthLabels: \"monthLabels\",\n      selectedDate: \"selectedDate\",\n      range: \"range\",\n      interval: \"interval\"\n    },\n    outputs: {\n      selectDate: \"selectDate\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 11,\n    vars: 8,\n    consts: [[1, \"m-datepicker__nav\"], [\"type\", \"button\", 1, \"a-button\", \"has-icon\", 3, \"click\"], [\"name\", \"ai-arrow-left-1\"], [\"type\", \"button\", 1, \"m-datepicker__title\", \"a-button\", 3, \"click\"], [\"name\", \"ai-arrow-right-1\"], [3, \"activeDate\", \"range\", \"interval\", \"selectedDate\", \"weekdayLabels\", \"selectDate\", 4, \"ngIf\"], [3, \"activeDate\", \"monthLabels\", \"selectedDate\", \"selectDate\", 4, \"ngIf\"], [3, \"activeDate\", \"selectedDate\", \"selectDate\", 4, \"ngIf\"], [3, \"activeDate\", \"range\", \"interval\", \"selectedDate\", \"weekdayLabels\", \"selectDate\"], [3, \"activeDate\", \"monthLabels\", \"selectedDate\", \"selectDate\"], [3, \"activeDate\", \"selectedDate\", \"selectDate\"]],\n    template: function CalendarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function CalendarComponent_Template_button_click_1_listener() {\n          return ctx.updateActiveDate(-1);\n        });\n        ɵngcc0.ɵɵelement(2, \"aui-icon\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"button\", 3);\n        ɵngcc0.ɵɵlistener(\"click\", function CalendarComponent_Template_button_click_3_listener() {\n          return ctx.switchView();\n        });\n        ɵngcc0.ɵɵtext(4);\n        ɵngcc0.ɵɵpipe(5, \"titlecase\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(6, \"button\", 1);\n        ɵngcc0.ɵɵlistener(\"click\", function CalendarComponent_Template_button_click_6_listener() {\n          return ctx.updateActiveDate(1);\n        });\n        ɵngcc0.ɵɵelement(7, \"aui-icon\", 4);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵtemplate(8, CalendarComponent_aui_calendar_month_8_Template, 1, 5, \"aui-calendar-month\", 5);\n        ɵngcc0.ɵɵtemplate(9, CalendarComponent_aui_calendar_year_9_Template, 1, 3, \"aui-calendar-year\", 6);\n        ɵngcc0.ɵɵtemplate(10, CalendarComponent_aui_calendar_decennia_10_Template, 1, 2, \"aui-calendar-decennia\", 7);\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaPreviousLabel);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind1(5, 6, ctx.headerLabel), \" \");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵattribute(\"aria-label\", ctx.ariaNextLabel);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.activeView === ctx.CALENDAR_VIEW_MONTH);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.activeView === ctx.CALENDAR_VIEW_YEAR);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.activeView === ctx.CALENDAR_VIEW_DECENNIA);\n      }\n    },\n    dependencies: function () {\n      return [ɵngcc1.NgIf, ɵngcc2.IconComponent, CalendarDecenniaComponent, CalendarMonthComponent, CalendarYearComponent, ɵngcc1.TitleCasePipe];\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n  return CalendarComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  CalendarComponent.prototype.role;\n  /** @type {?} */\n  CalendarComponent.prototype.ariahidden;\n  /** @type {?} */\n  CalendarComponent.prototype.ariaPreviousLabels;\n  /** @type {?} */\n  CalendarComponent.prototype.ariaNextLabels;\n  /** @type {?} */\n  CalendarComponent.prototype.selectedDate;\n  /** @type {?} */\n  CalendarComponent.prototype.range;\n  /** @type {?} */\n  CalendarComponent.prototype.interval;\n  /** @type {?} */\n  CalendarComponent.prototype.weekdayLabels;\n  /** @type {?} */\n  CalendarComponent.prototype.monthLabels;\n  /** @type {?} */\n  CalendarComponent.prototype.selectDate;\n  /** @type {?} */\n  CalendarComponent.prototype.CALENDAR_VIEW_MONTH;\n  /** @type {?} */\n  CalendarComponent.prototype.CALENDAR_VIEW_YEAR;\n  /** @type {?} */\n  CalendarComponent.prototype.CALENDAR_VIEW_DECENNIA;\n  /** @type {?} */\n  CalendarComponent.prototype.activeDate;\n  /** @type {?} */\n  CalendarComponent.prototype.activeView;\n  /** @type {?} */\n  CalendarComponent.prototype.headerLabel;\n  /** @type {?} */\n  CalendarComponent.prototype.ariaPreviousLabel;\n  /** @type {?} */\n  CalendarComponent.prototype.ariaNextLabel;\n  /** @type {?} */\n  CalendarComponent.prototype.moduleMonthLabels;\n  /** @type {?} */\n  CalendarComponent.prototype.moduleWeekdayLabels;\n  /**\n   * @type {?}\n   * @private\n   */\n  CalendarComponent.prototype.calendarService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/decennia/decennia.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet CalendarDecenniaComponent = /*#__PURE__*/(() => {\n  class CalendarDecenniaComponent {\n    constructor() {\n      this.selectDate = new EventEmitter();\n      this.years = [];\n      this.selectedYear = -1;\n      this.current = -1;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n      /** @type {?} */\n      const current = new Date();\n      this.current = current.getFullYear();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n      /** @type {?} */\n      const currentValue = get(changes, 'activeDate.currentValue');\n      /** @type {?} */\n      const previousValue = get(changes, 'activeDate.previousValue');\n      /** @type {?} */\n      const currentYear = currentValue instanceof Date ? currentValue.getFullYear() : -1;\n      /** @type {?} */\n      const previousYear = previousValue instanceof Date ? previousValue.getFullYear() : -1;\n      /** @type {?} */\n      const outOfRange = previousYear > currentYear || previousYear + 11 < currentYear;\n      if (currentYear >= 0 && outOfRange) {\n        this.updateYears();\n      }\n      this.selectedYear = this.selectedDate instanceof Date ? this.selectedDate.getFullYear() : -1;\n    }\n    /**\n     * @param {?} event\n     * @param {?} date\n     * @return {?}\n     */\n    pickDate(event, date) {\n      event.stopPropagation();\n      /** @type {?} */\n      const selectedDate = new Date(this.activeDate);\n      selectedDate.setFullYear(date);\n      this.selectDate.emit(selectedDate);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    updateYears() {\n      /** @type {?} */\n      const years = [];\n      /** @type {?} */\n      const activeYear = this.activeDate.getFullYear();\n      for (let i = activeYear; i < activeYear + 12; i += 1) {\n        years.push(i);\n      }\n      this.years = chunk(years, 4);\n    }\n  }\n  CalendarDecenniaComponent.ɵfac = function CalendarDecenniaComponent_Factory(t) {\n    return new (t || CalendarDecenniaComponent)();\n  };\n  CalendarDecenniaComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CalendarDecenniaComponent,\n    selectors: [[\"aui-calendar-decennia\"]],\n    inputs: {\n      selectedDate: \"selectedDate\",\n      activeDate: \"activeDate\"\n    },\n    outputs: {\n      selectDate: \"selectDate\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"m-datepicker__calendar\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"ngClass\", \"click\"]],\n    template: function CalendarDecenniaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\")(1, \"tbody\", 0);\n        ɵngcc0.ɵɵtemplate(2, CalendarDecenniaComponent_tr_2_Template, 2, 1, \"tr\", 1);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.years);\n      }\n    },\n    dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  return CalendarDecenniaComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  CalendarDecenniaComponent.prototype.selectedDate;\n  /** @type {?} */\n  CalendarDecenniaComponent.prototype.activeDate;\n  /** @type {?} */\n  CalendarDecenniaComponent.prototype.selectDate;\n  /** @type {?} */\n  CalendarDecenniaComponent.prototype.years;\n  /** @type {?} */\n  CalendarDecenniaComponent.prototype.selectedYear;\n  /** @type {?} */\n  CalendarDecenniaComponent.prototype.current;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/month/month.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet CalendarMonthComponent = /*#__PURE__*/(() => {\n  class CalendarMonthComponent {\n    /**\n     * @param {?=} moduleWeekdayLabels\n     * @param {?=} calendarService\n     */\n    constructor(moduleWeekdayLabels = CALENDAR_DEFAULT_WEEKDAY_LABELS, calendarService) {\n      this.moduleWeekdayLabels = moduleWeekdayLabels;\n      this.calendarService = calendarService;\n      this.weekdayLabels = CALENDAR_DEFAULT_WEEKDAY_LABELS;\n      this.selectDate = new EventEmitter();\n      this.dates = [];\n      this.selectedDay = -1;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n      this.weekdayLabels = this.weekdayLabels || this.moduleWeekdayLabels;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n      /** @type {?} */\n      const selectedDateChanged = this.hasChanged(changes, 'selectedDate');\n      /** @type {?} */\n      const intervalChanged = !!changes.interval && changes.interval.currentValue !== changes.interval.previousValue;\n      /** @type {?} */\n      const activeDateChanged = this.hasChanged(changes, 'activeDate');\n      /** @type {?} */\n      const monthChanged = activeDateChanged && !DateHelper.datesAreEqual([changes.activeDate.currentValue, changes.activeDate.previousValue], 'M');\n      /** @type {?} */\n      const selectedDayChanged = this.selectedDate && this.activeDate.getMonth() === this.selectedDate.getMonth();\n      this.current = this.getCurrentDate();\n      this.selectedDay = selectedDayChanged ? this.selectedDate.getDate() : -1;\n      /** @type {?} */\n      let newDates = [];\n      if (selectedDateChanged || intervalChanged || activeDateChanged && monthChanged) {\n        newDates = this.calendarService.getMonthForDate(this.activeDate);\n      } else {\n        return;\n      }\n      /** @type {?} */\n      const range = this.calendarService.getRangesForDate(this.activeDate, this.range);\n      this.dates = newDates.map(\n      /**\n      * @param {?} week\n      * @return {?}\n      */\n      week => week.map(\n      /**\n      * @param {?} day\n      * @return {?}\n      */\n      day => {\n        /** @type {?} */\n        const currentDate = new Date();\n        this.activeDate.setHours(currentDate.getHours(), currentDate.getMinutes(), currentDate.getSeconds());\n        /** @type {?} */\n        const date = new Date(this.activeDate);\n        if (day.padding) {\n          if (day.date > 20) {\n            date.setMonth(this.activeDate.getMonth() - 1);\n          } else {\n            date.setMonth(this.activeDate.getMonth() + 1);\n          }\n        }\n        date.setDate(day.date);\n        /** @type {?} */\n        const available = this.dayIsAvailableForRange(day, range) && (this.interval ? !this.interval.isInRange(date) : true);\n        return Object.assign({}, day, {\n          available\n        });\n      }));\n    }\n    /**\n     * @param {?} event\n     * @param {?} day\n     * @return {?}\n     */\n    pickDate(event, day) {\n      event.stopPropagation(); // Stop propagation so the modal doesn't close\n      // Stop propagation so the modal doesn't close\n      /** @type {?} */\n      let selectedDate = new Date(this.activeDate);\n      if (day.padding) {\n        /** @type {?} */\n        const month = day.date > 20 ? -1 : 1;\n        selectedDate = DateHelper.updateMonth(selectedDate, selectedDate.getMonth() + month);\n      }\n      this.selectDate.emit(DateHelper.updateDate(selectedDate, day.date));\n    }\n    /**\n     * @private\n     * @param {?} changes\n     * @param {?} prop\n     * @return {?}\n     */\n    hasChanged(changes, prop) {\n      /** @type {?} */\n      const current = get(changes, `${prop}.currentValue`);\n      /** @type {?} */\n      const previous = get(changes, `${prop}.previousValue`);\n      /** @type {?} */\n      const currentValue = current instanceof Date ? current.valueOf() : 0;\n      /** @type {?} */\n      const previousValue = previous instanceof Date ? previous.valueOf() : 0;\n      return !!currentValue && currentValue !== previousValue;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    getCurrentDate() {\n      /** @type {?} */\n      const current = new Date();\n      /** @type {?} */\n      const monthHasChanged = !DateHelper.datesAreEqual([this.activeDate, current], ['M', 'Y']);\n      return monthHasChanged ? -1 : current.getDate();\n    }\n    /**\n     * @private\n     * @param {?} day\n     * @param {?} range\n     * @return {?}\n     */\n    dayIsAvailableForRange(day, range) {\n      if (!range) {\n        return true;\n      }\n      /** @type {?} */\n      let dateRange = range.current;\n      if (day.padding) {\n        dateRange = day.date > 20 ? range.before : range.after;\n      }\n      return dateRange.indexOf(day.date) < 0;\n    }\n  }\n  CalendarMonthComponent.ɵfac = function CalendarMonthComponent_Factory(t) {\n    return new (t || CalendarMonthComponent)(ɵngcc0.ɵɵdirectiveInject(CALENDAR_WEEKDAY_LABELS), ɵngcc0.ɵɵdirectiveInject(CalendarService));\n  };\n  CalendarMonthComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CalendarMonthComponent,\n    selectors: [[\"aui-calendar-month\"]],\n    inputs: {\n      weekdayLabels: \"weekdayLabels\",\n      selectedDate: \"selectedDate\",\n      activeDate: \"activeDate\",\n      range: \"range\",\n      interval: \"interval\"\n    },\n    outputs: {\n      selectDate: \"selectDate\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"m-datepicker__days\"], [\"scope\", \"col\", 4, \"ngFor\", \"ngForOf\"], [1, \"m-datepicker__calendar\"], [4, \"ngFor\", \"ngForOf\"], [\"scope\", \"col\"], [1, \"u-text-capitalize\", 3, \"title\"], [\"type\", \"button\", 3, \"disabled\", \"ngClass\", \"click\"]],\n    template: function CalendarMonthComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\")(1, \"thead\")(2, \"tr\", 0);\n        ɵngcc0.ɵɵtemplate(3, CalendarMonthComponent_th_3_Template, 4, 6, \"th\", 1);\n        ɵngcc0.ɵɵelementEnd()();\n        ɵngcc0.ɵɵelementStart(4, \"tbody\", 2);\n        ɵngcc0.ɵɵtemplate(5, CalendarMonthComponent_tr_5_Template, 2, 1, \"tr\", 3);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.weekdayLabels);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.dates);\n      }\n    },\n    dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.SlicePipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n  return CalendarMonthComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  CalendarMonthComponent.prototype.selectedDate;\n  /** @type {?} */\n  CalendarMonthComponent.prototype.activeDate;\n  /** @type {?} */\n  CalendarMonthComponent.prototype.range;\n  /** @type {?} */\n  CalendarMonthComponent.prototype.interval;\n  /** @type {?} */\n  CalendarMonthComponent.prototype.weekdayLabels;\n  /** @type {?} */\n  CalendarMonthComponent.prototype.selectDate;\n  /** @type {?} */\n  CalendarMonthComponent.prototype.dates;\n  /** @type {?} */\n  CalendarMonthComponent.prototype.selectedDay;\n  /** @type {?} */\n  CalendarMonthComponent.prototype.current;\n  /**\n   * @type {?}\n   * @private\n   */\n  CalendarMonthComponent.prototype.moduleWeekdayLabels;\n  /**\n   * @type {?}\n   * @private\n   */\n  CalendarMonthComponent.prototype.calendarService;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components/year/year.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nlet CalendarYearComponent = /*#__PURE__*/(() => {\n  class CalendarYearComponent {\n    /**\n     * @param {?=} moduleMonthLabels\n     */\n    constructor(moduleMonthLabels = CALENDAR_DEFAULT_MONTH_LABELS) {\n      this.moduleMonthLabels = moduleMonthLabels;\n      this.monthLabels = CALENDAR_DEFAULT_MONTH_LABELS;\n      this.selectDate = new EventEmitter();\n      this.selectedMonth = -1;\n      this.current = '';\n      this.months = [];\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n      /** @type {?} */\n      const currentValue = get(changes, 'activeDate.currentValue');\n      /** @type {?} */\n      const currentYear = currentValue instanceof Date ? currentValue.getFullYear() : -1;\n      /** @type {?} */\n      const selectedMonthChanged = this.selectedDate && this.selectedDate.getFullYear() === this.activeDate.getFullYear();\n      /** @type {?} */\n      const current = new Date();\n      this.current = currentYear === current.getFullYear() ? this.monthLabels[current.getMonth()] : '';\n      this.selectedMonth = selectedMonthChanged ? this.selectedDate.getMonth() : -1;\n      if (changes.monthLabels) {\n        this.monthLabels = this.monthLabels || this.moduleMonthLabels;\n        this.months = chunk(this.monthLabels, 4);\n      }\n    }\n    /**\n     * @param {?} event\n     * @param {?} date\n     * @return {?}\n     */\n    pickDate(event, date) {\n      event.stopPropagation();\n      /** @type {?} */\n      let selectedDate = new Date(this.activeDate);\n      selectedDate = DateHelper.updateMonth(selectedDate, this.monthLabels.indexOf(date));\n      this.selectDate.emit(selectedDate);\n    }\n  }\n  CalendarYearComponent.ɵfac = function CalendarYearComponent_Factory(t) {\n    return new (t || CalendarYearComponent)(ɵngcc0.ɵɵdirectiveInject(CALENDAR_MONTH_LABELS));\n  };\n  CalendarYearComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: CalendarYearComponent,\n    selectors: [[\"aui-calendar-year\"]],\n    inputs: {\n      monthLabels: \"monthLabels\",\n      selectedDate: \"selectedDate\",\n      activeDate: \"activeDate\"\n    },\n    outputs: {\n      selectDate: \"selectDate\"\n    },\n    features: [ɵngcc0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"m-datepicker__calendar\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", 3, \"ngClass\", \"click\"]],\n    template: function CalendarYearComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"table\")(1, \"tbody\", 0);\n        ɵngcc0.ɵɵtemplate(2, CalendarYearComponent_tr_2_Template, 2, 1, \"tr\", 1);\n        ɵngcc0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.months);\n      }\n    },\n    dependencies: [ɵngcc1.NgClass, ɵngcc1.NgForOf, ɵngcc1.TitleCasePipe],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n  /** @nocollapse */\n  return CalendarYearComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nif (false) {\n  /** @type {?} */\n  CalendarYearComponent.prototype.selectedDate;\n  /** @type {?} */\n  CalendarYearComponent.prototype.activeDate;\n  /** @type {?} */\n  CalendarYearComponent.prototype.monthLabels;\n  /** @type {?} */\n  CalendarYearComponent.prototype.selectDate;\n  /** @type {?} */\n  CalendarYearComponent.prototype.selectedMonth;\n  /** @type {?} */\n  CalendarYearComponent.prototype.current;\n  /** @type {?} */\n  CalendarYearComponent.prototype.months;\n  /** @type {?} */\n  CalendarYearComponent.prototype.moduleMonthLabels;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/calendar.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nconst ɵ0 = CALENDAR_DEFAULT_WEEKDAY_LABELS,\n  ɵ1 = CALENDAR_DEFAULT_MONTH_LABELS;\nlet CalendarModule = /*#__PURE__*/(() => {\n  class CalendarModule {\n    /**\n     * @param {?} weekdayLabels\n     * @param {?} monthLabels\n     * @return {?}\n     */\n    static forChild(weekdayLabels, monthLabels) {\n      return {\n        ngModule: CalendarModule,\n        providers: [CalendarService, {\n          provide: CALENDAR_WEEKDAY_LABELS,\n          useValue: weekdayLabels\n        }, {\n          provide: CALENDAR_MONTH_LABELS,\n          useValue: monthLabels\n        }]\n      };\n    }\n  }\n  CalendarModule.ɵfac = function CalendarModule_Factory(t) {\n    return new (t || CalendarModule)();\n  };\n  CalendarModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: CalendarModule\n  });\n  CalendarModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    providers: [CalendarService, {\n      provide: CALENDAR_WEEKDAY_LABELS,\n      useValue: ɵ0\n    }, {\n      provide: CALENDAR_MONTH_LABELS,\n      useValue: ɵ1\n    }],\n    imports: [CommonModule, IconModule]\n  });\n  return CalendarModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CalendarModule, {\n    declarations: function () {\n      return [CalendarComponent, CalendarDecenniaComponent, CalendarMonthComponent, CalendarYearComponent];\n    },\n    imports: function () {\n      return [CommonModule, IconModule];\n    },\n    exports: function () {\n      return [CalendarComponent, CalendarDecenniaComponent, CalendarMonthComponent, CalendarYearComponent];\n    }\n  });\n})();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: acpaas-ui-ngx-calendar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { CALENDAR_DEFAULT_MONTH_LABELS, CALENDAR_DEFAULT_WEEKDAY_LABELS, CALENDAR_MONTH_LABELS, CALENDAR_VIEW_DECENNIA, CALENDAR_VIEW_MONTH, CALENDAR_VIEW_YEAR, CALENDAR_WEEKDAY_LABELS, CalendarComponent, CalendarDecenniaComponent, CalendarModule, CalendarMonthComponent, CalendarService, CalendarYearComponent };\n\n//# sourceMappingURL=acpaas-ui-ngx-calendar.js.map","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}